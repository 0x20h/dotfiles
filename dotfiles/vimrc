set nocompatible
set backupdir=~/.vim/backup,/tmp,.
set directory=~/.vim/backup,/tmp,.
" Use pathogen to easily modify the runtime path to include all
" plugins under the ~/.vim/bundle directory
call pathogen#helptags()
call pathogen#infect() "runtime_append_all_bundles()
filetype plugin indent on

" set a decent title on exit
" set t_Co=256 " set the terminal to 256 color mode
" set modelines=0
set guicursor=a:blinkon0
set wildmenu
set showmode
set hlsearch
set incsearch
set tabstop=4
set shiftwidth=4
set noignorecase
set smartcase
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]
"set showmatch
set backspace=indent,eol,start
set number
set ruler
set showcmd
set smartindent
set hidden
set textwidth=80
set colorcolumn=80
syntax on

" POWERLINE setup
set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
set laststatus=2
set t_Co=256

" use :set list and :set nolist
set listchars=tab:▸\ ,eol:¬
" Visible whitespace
set list

" COLORS
colorscheme pablo
hi CursorLine cterm=bold ctermbg=235 " Overwrite cursor line style
hi Folded cterm=none ctermfg=white ctermbg=black
hi Comment ctermfg=DarkGreen ctermbg=None
hi PMenu cterm=none ctermbg=black ctermfg=lightgrey
hi PMenuSel cterm=bold ctermbg=239 ctermfg=white
hi StatusLine cterm=bold ctermbg=darkgreen ctermfg=white
hi StatusLineNC cterm=none ctermbg=darkred ctermfg=white
hi MatchParen ctermbg=21 cterm=bold ctermfg=white
hi SyntasticWarning ctermbg=yellow cterm=bold ctermfg=red
hi WordError ctermfg=88 cterm=none ctermbg=none
hi SpellBad ctermbg=88 cterm=none
hi ColorColumn ctermbg=202 cterm=none

" DIFF VIEW
hi DiffAdd term=bold ctermbg=22 ctermfg=255
hi DiffChange term=bold ctermfg=16 ctermbg=220
hi DiffDelete term=bold ctermfg=247 ctermbg=196
hi DiffText term=reverse cterm=bold ctermfg=white
set cursorline


" #############################################################################
" Key Mappings
" #############################################################################

" The mapleader is a custom defined leader key under which
" you can place your mappings.
let mapleader=","
nmap <silent> <leader>/ :nohlsearch<CR>
nmap <leader>t :FufTag<CR>
nmap <leader>k :FufFile<CR>
nmap <leader>j :FufBuffer<CR>
nmap <leader>l :FufBufferTag<CR>
nmap <leader>s :call SyncWithRemote()<CR>

" CTRL-Shift-R for file search (like eclipse)
nmap <C-a> :FufCoverageFile<CR>
" CTRL-s doubled for reloading the config
nnoremap <C-c><C-c> :source ~/.vimrc<CR>
" diff view + diff close
nmap <leader>d :VCSVimDiff<CR>
nmap <leader>c :bd<CR>

" next/prev buffer
noremap <C-n> :bn<CR>
nnoremap <C-m> :bp<CR>
nnoremap <C-j> i<CR><ESC>

" Window width for NERDtree
let g:NERDTreeWinSize=50
map <F2> :NERDTreeToggle<cr>

" Window size for taglist
let Tlist_WinWidth=50
let Tlist_Use_Right_Window=1
map <F4> :TlistToggle<cr>
map <F3> :set paste!<cr>

set completeopt=longest,menuone

" completion like eclipse
inoremap <Nul> <C-n>

" self protection :/
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>

" allow a project-wise vimrc to overwrite defaults
if !exists("*LoadProjectSettings")
	function LoadProjectSettings()
		if (filereadable('./vimrc'))
			:source ./vimrc
		endif
	endfunction
endif

" #############################################################################
" LANGUAGE SPECIFIC SETTINGS
" #############################################################################
augroup phpgroup
	autocmd!
	autocmd Filetype php set expandtab ts=4 omnifunc=phpcomplete#CompletePHP
    " let g:syntastic_phpcs_conf = '--standard=PSR2'
	" php folding
	let php_folding=1
	let php_htmlInStrings=1
	let php_sql_query=1
	let php_noShortTags=1
	set foldlevel=1
augroup END

augroup c
	autocmd!
	autocmd FileType c set noexpandtab ts=4 foldenable foldlevel=0 foldmethod=indent foldnestmax=1
augroup end

autocmd FileType go map <F1> :Godoc<cr>
autocmd FileType go set list
autocmd FileType go inoremap <Nul> <C-x><C-o>

" Make vim run execute_on_save.sh if an execute_on_save.sh
" exeutable exists in current pwd ...
function! SyncWithRemote()
	if executable('./execute_on_save.sh')
		:call system('./execute_on_save.sh')
		echo "Synced!"
	endif
endfunction

function! Trim()
	:%s# *$##g|''
endfunction

let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': [], 'passive_filetypes': ['sh', 'rst', 'md', 'php'] }

" ####################
" textfiles
" ####################
au! BufRead *.rst set expandtab ts=4
au! BufWritePost *.rst :call system('make')
au! BufRead *.md set textwidth=80 colorcolumn=80 expandtab tabstop=4
au! BufRead *.jade set expandtab tabstop=2 list
au! FileType xslt,xml set textwidth=80 colorcolumn=80 expandtab tabstop=4

autocmd Filetype javascript set expandtab ts=2 shiftwidth=2

" autoload syntax highlighting for typos
autocmd BufRead * :source $HOME/.vim/bundle/syntax/typos.vim
autocmd BufReadPre * :call LoadProjectSettings()
